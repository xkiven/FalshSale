// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package activity_service

import (
	"context"
	"fmt"
)

type CreateActivityRequest struct {
	ActivityId    int32   `thrift:"activity_id,1" frugal:"1,default,i32" json:"activity_id"`
	StartTime     string  `thrift:"start_time,2" frugal:"2,default,string" json:"start_time"`
	EndTime       string  `thrift:"end_time,3" frugal:"3,default,string" json:"end_time"`
	ProductId     int32   `thrift:"product_id,4" frugal:"4,default,i32" json:"product_id"`
	DiscountPrice float64 `thrift:"discount_price,5" frugal:"5,default,double" json:"discount_price"`
}

func NewCreateActivityRequest() *CreateActivityRequest {
	return &CreateActivityRequest{}
}

func (p *CreateActivityRequest) InitDefault() {
}

func (p *CreateActivityRequest) GetActivityId() (v int32) {
	return p.ActivityId
}

func (p *CreateActivityRequest) GetStartTime() (v string) {
	return p.StartTime
}

func (p *CreateActivityRequest) GetEndTime() (v string) {
	return p.EndTime
}

func (p *CreateActivityRequest) GetProductId() (v int32) {
	return p.ProductId
}

func (p *CreateActivityRequest) GetDiscountPrice() (v float64) {
	return p.DiscountPrice
}
func (p *CreateActivityRequest) SetActivityId(val int32) {
	p.ActivityId = val
}
func (p *CreateActivityRequest) SetStartTime(val string) {
	p.StartTime = val
}
func (p *CreateActivityRequest) SetEndTime(val string) {
	p.EndTime = val
}
func (p *CreateActivityRequest) SetProductId(val int32) {
	p.ProductId = val
}
func (p *CreateActivityRequest) SetDiscountPrice(val float64) {
	p.DiscountPrice = val
}

func (p *CreateActivityRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateActivityRequest(%+v)", *p)
}

var fieldIDToName_CreateActivityRequest = map[int16]string{
	1: "activity_id",
	2: "start_time",
	3: "end_time",
	4: "product_id",
	5: "discount_price",
}

type CreateActivityResponse struct {
	Code    int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Message string `thrift:"message,2" frugal:"2,default,string" json:"message"`
}

func NewCreateActivityResponse() *CreateActivityResponse {
	return &CreateActivityResponse{}
}

func (p *CreateActivityResponse) InitDefault() {
}

func (p *CreateActivityResponse) GetCode() (v int32) {
	return p.Code
}

func (p *CreateActivityResponse) GetMessage() (v string) {
	return p.Message
}
func (p *CreateActivityResponse) SetCode(val int32) {
	p.Code = val
}
func (p *CreateActivityResponse) SetMessage(val string) {
	p.Message = val
}

func (p *CreateActivityResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateActivityResponse(%+v)", *p)
}

var fieldIDToName_CreateActivityResponse = map[int16]string{
	1: "code",
	2: "message",
}

type ActivityService interface {
	CreateActivity(ctx context.Context, req *CreateActivityRequest) (r *CreateActivityResponse, err error)
}

type ActivityServiceCreateActivityArgs struct {
	Req *CreateActivityRequest `thrift:"req,1" frugal:"1,default,CreateActivityRequest" json:"req"`
}

func NewActivityServiceCreateActivityArgs() *ActivityServiceCreateActivityArgs {
	return &ActivityServiceCreateActivityArgs{}
}

func (p *ActivityServiceCreateActivityArgs) InitDefault() {
}

var ActivityServiceCreateActivityArgs_Req_DEFAULT *CreateActivityRequest

func (p *ActivityServiceCreateActivityArgs) GetReq() (v *CreateActivityRequest) {
	if !p.IsSetReq() {
		return ActivityServiceCreateActivityArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *ActivityServiceCreateActivityArgs) SetReq(val *CreateActivityRequest) {
	p.Req = val
}

func (p *ActivityServiceCreateActivityArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ActivityServiceCreateActivityArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ActivityServiceCreateActivityArgs(%+v)", *p)
}

var fieldIDToName_ActivityServiceCreateActivityArgs = map[int16]string{
	1: "req",
}

type ActivityServiceCreateActivityResult struct {
	Success *CreateActivityResponse `thrift:"success,0,optional" frugal:"0,optional,CreateActivityResponse" json:"success,omitempty"`
}

func NewActivityServiceCreateActivityResult() *ActivityServiceCreateActivityResult {
	return &ActivityServiceCreateActivityResult{}
}

func (p *ActivityServiceCreateActivityResult) InitDefault() {
}

var ActivityServiceCreateActivityResult_Success_DEFAULT *CreateActivityResponse

func (p *ActivityServiceCreateActivityResult) GetSuccess() (v *CreateActivityResponse) {
	if !p.IsSetSuccess() {
		return ActivityServiceCreateActivityResult_Success_DEFAULT
	}
	return p.Success
}
func (p *ActivityServiceCreateActivityResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateActivityResponse)
}

func (p *ActivityServiceCreateActivityResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ActivityServiceCreateActivityResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ActivityServiceCreateActivityResult(%+v)", *p)
}

var fieldIDToName_ActivityServiceCreateActivityResult = map[int16]string{
	0: "success",
}
